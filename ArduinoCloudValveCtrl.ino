/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/b9964a07-4d8b-4de5-b355-69ba34cf2353

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int valve1_state;
  int valve2_state;
  bool valve1;
  bool valve2;
  bool valve3;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

const int ledPin = 16; // Pin number for LED1 on Ks0354
const int PS_ledPin = 14; // LED on protoshield

void setup() {
  pinMode(ledPin, OUTPUT);
  pinMode(PS_ledPin, OUTPUT);

  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);
  

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  
  if(valve1)
  {
    digitalWrite(ledPin, LOW);
  }
  else
  {
    digitalWrite(ledPin, HIGH);
  }
  
  if(valve2)
  {
    digitalWrite(PS_ledPin, HIGH);
  }
  else
  {
    digitalWrite(PS_ledPin, LOW);
  }
  

  


}



/*
  Since Valve1 is READ_WRITE variable, onValve1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onValve1Change()  {
  // Add your code here to act upon Valve1 change
  Serial.println("onValve1Change");
  


}

/*
  Since Valve2 is READ_WRITE variable, onValve2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onValve2Change()  {
  // Add your code here to act upon Valve2 change
  Serial.println("onValve2Change");
}

/*
  Since Valve1State is READ_WRITE variable, onValve1StateChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onValve1StateChange()  {
  // Add your code here to act upon Valve1State change
  Serial.println("onValve1StateChange");
}

/*
  Since Valve2State is READ_WRITE variable, onValve2StateChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onValve2StateChange()  {
  // Add your code here to act upon Valve2State change
  Serial.println("onValve2StateChange");
}

/*
  Since Valve3 is READ_WRITE variable, onValve3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onValve3Change()  {
  // Add your code here to act upon Valve3 change
    Serial.println("onValve3StateChange");
}